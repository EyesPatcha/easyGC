{
  "name": "EasyGC",
  "tagline": "A high throughput GC-MS analysis pipeline built on the Python PyMS library",
  "body": "EasyGC\r\n======\r\n\r\nThis is a high throughput, command-line GC-MS analysis pipeline. It is built on top of a modified version of the PyMS python library (http://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-13-115 ) \r\n\r\nThis pipeline makes it easy to analyse a large set of GC-MS runs. The input is a directory full of runs (in CDF or JDX format), and the output is a matrix of peaks aligned across all your samples, including their retention times, TIC areas, and mini mass spec per called peak. You can tweak the way peaks are called, filtered and aligned with a whole range of parameters. The key thing, though, is that this pipeline makes it VERY easy to quantitate a lot of peaks across a lot of samples with minimal fuss. It is especially useful for population-level analyses where relative peak size or presence matters most, rather than extremely accurate peak identification and quantitation.\r\n\r\n**version: 0.0.1**: very early. There are currently bugs in the multithreading on linux.\r\n\r\nprerequisites\r\n-------------\r\n- Python 2.7\r\n- matplotlib\r\n- netCDF\r\n- pycdf 0.6-3  (this will only work on Linux)\r\n- scipy.ndimage package\r\n \r\n(see PyMS_UserGuide.pdf for dependencies installation instructions). \r\n\r\nThe PyMS lib in this repository (/pyms) should be used instead of the original PyMS python library, as it has a few extra features and bug fixes.\r\n\r\nmanual\r\n------\r\nusage: python easyGC.py [command] [options]\r\n\r\n**peakcall**\r\n\r\nrun the peak caller on a directory of GC-MS files. This will produce a <i>.expr</i> file output for each GC-MS run which is a binary format of called peaks and mass specs. The .expr files are used later by the aligner. \r\n```\r\nusage: easyGC peakcall [-h] -i INDIR -f FTYPE [-TS TRIMSTART] [-TE TRIMEND]\r\n                       [-W WINDOW] [-S SCANS] [-N MINIONS] [-R MININTENSITY]\r\n                       [-M NOISEMULT] [-I TOPIONS]\r\n```\r\n\r\n\r\n```\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INDIR, --indir INDIR\r\n                        directory containing your GC-MS files to be processed\r\n                        (default: None)\r\n  -f FTYPE, --ftype FTYPE\r\n                        CDF or JDX. This is the type of input GC-MS files you\r\n                        have. CDF is not supported on Windows (default: None)\r\n  -TS TRIMSTART, --trimstart TRIMSTART\r\n                        time in minutes (X.XX) in the chromatogram from where\r\n                        the analysis should begin. Helps to cut out junk at\r\n                        the start (default: 0.0)\r\n  -TE TRIMEND, --trimend TRIMEND\r\n                        time in minutes (X.XX) in the chromatogram where the\r\n                        analysis should end. Helps to cut out junk at the end\r\n                        (default: 20.0)\r\n  -W WINDOW, --window WINDOW\r\n                        peak calling: width (in scans) of window over which\r\n                        local ion maxima are detected. Should be similar to\r\n                        the width off your peaks. (default: 9)\r\n  -S SCANS, --scans SCANS\r\n                        peak calling: distance (in scans) at which locally\r\n                        apexing ions can be combined into one peak (default:\r\n                        3)\r\n  -N MINIONS, --minions MINIONS\r\n                        peak calling: min number of apexing ions with\r\n                        intensity above a threshold required for a peak to be\r\n                        called. Higher = less peaks called (default: 4)\r\n  -R MININTENSITY, --minintensity MININTENSITY\r\n                        peak calling: min intensity (percent) of an ion\r\n                        relative to max peak intensity for that ion to be\r\n                        included in the peak (default: 5)\r\n  -M NOISEMULT, --noisemult NOISEMULT\r\n                        peak calling: total peak intensity must be at least\r\n                        this multiple of the base noise level to be called.\r\n                        Higher multiple means fewer peaks called (default: 4)\r\n  -I TOPIONS, --topions TOPIONS\r\n                        from the list of most important ions in a peak, how\r\n                        many should be outputted as a mini mass-spec?\r\n                        (default: 10)\r\n```\r\n\r\n**align**\r\n\r\nrun the peak aligner on a directory of .expr files that were produced by [peakcall]() . This will produce three CSV files as ouput:\r\n\r\n- aligned_rt.csv\r\n- aligned_area.csv\r\n- aligned_ions.csv\r\n\r\nThis command is especially useful if you are not happy with the aligned output from 'pipeline' and want to tweak the alignment parameters to see how they affaect your output matrix, without having to call peaks all over again. \r\n\r\n```\r\nusage: easyGC align -e EXPRDIR [-D DISTANCE] [-G GAP] [-C MINCOMMON] [-T THREADS]\r\n```\r\n```\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -e EXPRDIR, --exprdir EXPRDIR\r\n                        the path to the .expr files from a previous peak\r\n                        calling run. These will be aligned. (default: None)\r\n  -D DISTANCE, --distance DISTANCE\r\n                        local alignment: distance in retention time (seconds)\r\n                        over which the local peak aligner should search for\r\n                        similar peaks to this one (default: 2.5)\r\n  -G GAP, --gap GAP     local alignment: gap penalty. Lower G results in more\r\n                        peaks in the output. Higher G result in fewer output\r\n                        peaks but possibly some peaks contain multiple merged\r\n                        peaks (default: 0.4)\r\n  -C MINCOMMON, --mincommon MINCOMMON\r\n                        local alignment: minimum number of samples that an\r\n                        aligned peak must be called in for it to be outputted\r\n                        (default: 1)\r\n  -T THREADS, --threads THREADS\r\n                        number of threads to use. Currently only multithreaded\r\n                        on linux! (default: 1)\r\n\r\n```\r\n\r\n**pipeline**\r\n\r\nrun the whole shebang on a directory of GC-MS runs, inclduing peak calling through to aligned output.\r\n```\r\nusage: easyGC pipeline [-h] -i INDIR -f FTYPE [-TS TRIMSTART] [-TE TRIMEND]\r\n                       [-W WINDOW] [-S SCANS] [-N MINIONS] [-R MININTENSITY]\r\n                       [-M NOISEMULT] [-I TOPIONS] [-D DISTANCE] [-G GAP]\r\n                       [-C MINCOMMON] [-T THREADS]\r\n```\r\n\r\n\r\nTO DO\r\n-----\r\n- include dependencies in repository\r\n- produce excel file output with error checking results shown by cell colour.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}